import java.util.*;
public class LinkedList_operations
{
    public class Node
    {
        int data;
        Node next;
        public Node(int d)
        {
            data = d;
            next = null;
        }
    }
    Node head;
    public void insertAtStart(int d)
    {
        Node newNode = new Node(d);
        newNode.next = head;
        head = newNode;
        System.out.println("Inserted at the start");
    }
    public void insertAtPosition(int d, int position)
    {
        Node newNode = new Node(d);
        if (position == 1)
        {
            insertAtStart(d);
            return;
        }
        Node current = head;
        for (int i = 1; i < position - 1; i++)
        {
            if (current == null)
            {
                System.out.println("Position out of bounds");
                return;
            }
            current = current.next;
        }
        if (current != null)
        {
            newNode.next = current.next;
            current.next = newNode;
            System.out.println("Inserted at position " + position);
        }
    }
    public void insertAtEnd(int d)
    {
        Node newNode = new Node(d);
        if (head == null)
        {
            head = newNode;
            System.out.println("Inserted at the end (list was empty)");
            return;
        }
        Node current = head;
        while (current.next != null)
        {
            current = current.next;
        }
        current.next = newNode;
        System.out.println("Inserted at the end");
    }
    public void display()
    {
        Node current = head;
        while (current != null)
        {
            System.out.print(current.data + " -> ");
            current = current.next;
        }
        System.out.println("null");
    }
    public static void main(String args[])
    {
        Scanner s = new Scanner(System.in);
        LinkedList_operations list = new LinkedList_operations();
        
        while (true)
        {
            System.out.println("\nChoose an option:");
            System.out.println("1. Insert at the start");
            System.out.println("2. Insert at a specific position");
            System.out.println("3. Insert at the end");
            System.out.println("4. Display the list");
            System.out.println("5. Exit");
            int choice = s.nextInt();       
            if (choice == 5)
            {
                break;
            }
            switch (choice)
            {
                case 1:
                    System.out.print("Enter the data to insert: ");
                    int dataStart = s.nextInt();
                    list.insertAtStart(dataStart);
                    break;
                case 2:
                    System.out.print("Enter the data to insert: ");
                    int dataPosition = s.nextInt();
                    System.out.print("Enter the position to insert: ");
                    int position = s.nextInt();
                    list.insertAtPosition(dataPosition, position);
                    break;
                case 3:
                    System.out.print("Enter the data to insert: ");
                    int dataEnd = s.nextInt();
                    list.insertAtEnd(dataEnd);
                    break;
                case 4:
                    list.display();
                    break;
                default:
                    System.out.println("Invalid choice, please try again.");
                    continue;
            }
        }
        s.close();
    }
}
